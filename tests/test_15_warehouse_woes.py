from __future__ import annotations

from solutions._15_warehouse_woes import Map, Move


def test_15_map_init():
    map_input = """\
##########
#..O..O.O#
#......O.#
#.OO..O.O#
#..O@..O.#
#O#..O...#
#O..O..O.#
#.OO.O.OO#
#....O...#
##########\
"""
    moves = """\
<vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^
vvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v
><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<
<<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^
^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><
^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^
>^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^
<><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>
^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>
v^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^\
"""
    m = Map(map_input, moves)
    assert str(m) == map_input
    assert "".join(map(str, m.moves)) == moves.replace("\n", "")


def test_15_map_move_simple():
    map_input = """\
########
#..O.O.#
##@.O..#
#...O..#
#.#.O..#
#...O..#
#......#
########\
"""
    moves = "<^^>>>vv<v>>v<<"
    m = Map(map_input, moves)
    assert str(m) == map_input
    assert "".join(map(str, m.moves)) == moves.replace("\n", "")

    m.move_tile(m.robot, m.moves[0])
    assert str(m) == """\
########
#..O.O.#
##@.O..#
#...O..#
#.#.O..#
#...O..#
#......#
########\
"""
    m.move_tile(m.robot, m.moves[1])
    assert str(m) == """\
########
#.@O.O.#
##..O..#
#...O..#
#.#.O..#
#...O..#
#......#
########\
"""
    m.move_tile(m.robot, m.moves[2])
    assert str(m) == """\
########
#.@O.O.#
##..O..#
#...O..#
#.#.O..#
#...O..#
#......#
########\
"""
    m.move_tile(m.robot, m.moves[3])
    assert str(m) == """\
########
#..@OO.#
##..O..#
#...O..#
#.#.O..#
#...O..#
#......#
########\
"""
    m.move_tile(m.robot, m.moves[4])
    assert str(m) == """\
########
#...@OO#
##..O..#
#...O..#
#.#.O..#
#...O..#
#......#
########\
"""
    m.move_tile(m.robot, m.moves[5])
    assert str(m) == """\
########
#...@OO#
##..O..#
#...O..#
#.#.O..#
#...O..#
#......#
########\
"""
    m.move_tile(m.robot, m.moves[6])
    assert str(m) == """\
########
#....OO#
##..@..#
#...O..#
#.#.O..#
#...O..#
#...O..#
########\
"""
    m.move_tile(m.robot, m.moves[7])
    assert str(m) == """\
########
#....OO#
##..@..#
#...O..#
#.#.O..#
#...O..#
#...O..#
########\
"""
    m.move_tile(m.robot, m.moves[8])
    assert str(m) == """\
########
#....OO#
##.@...#
#...O..#
#.#.O..#
#...O..#
#...O..#
########\
"""
    m.move_tile(m.robot, m.moves[9])
    assert str(m) == """\
########
#....OO#
##.....#
#..@O..#
#.#.O..#
#...O..#
#...O..#
########\
"""
    m.move_tile(m.robot, m.moves[10])
    assert str(m) == """\
########
#....OO#
##.....#
#...@O.#
#.#.O..#
#...O..#
#...O..#
########\
"""
    m.move_tile(m.robot, m.moves[11])
    assert str(m) == """\
########
#....OO#
##.....#
#....@O#
#.#.O..#
#...O..#
#...O..#
########\
"""
    m.move_tile(m.robot, m.moves[12])
    assert str(m) == """\
########
#....OO#
##.....#
#.....O#
#.#.O@.#
#...O..#
#...O..#
########\
"""
    m.move_tile(m.robot, m.moves[13])
    assert str(m) == """\
########
#....OO#
##.....#
#.....O#
#.#O@..#
#...O..#
#...O..#
########\
"""
    m.move_tile(m.robot, m.moves[14])
    assert str(m) == """\
########
#....OO#
##.....#
#.....O#
#.#O@..#
#...O..#
#...O..#
########\
"""
    assert m.sum_of_boxes_gps_coordinates() == 2028


def test_15_map_move_complex():
    map_input = """\
##########
#..O..O.O#
#......O.#
#.OO..O.O#
#..O@..O.#
#O#..O...#
#O..O..O.#
#.OO.O.OO#
#....O...#
##########\
"""
    moves = """\
<vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^
vvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v
><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<
<<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^
^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><
^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^
>^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^
<><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>
^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>
v^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^\
"""
    m = Map(map_input, moves)
    m.move_robot()
    assert str(m) == """\
##########
#.O.O.OOO#
#........#
#OO......#
#OO@.....#
#O#.....O#
#O.....OO#
#O.....OO#
#OO....OO#
##########\
"""
    assert m.sum_of_boxes_gps_coordinates() == 10092


def test_15_map_make_wide():

    map_input = """\
##########
#..O..O.O#
#......O.#
#.OO..O.O#
#..O@..O.#
#O#..O...#
#O..O..O.#
#.OO.O.OO#
#....O...#
##########\
"""
    m = Map(map_input, "")
    m.make_wide()
    # print(str(m))
    assert str(m) == """\
####################
##....[]....[]..[]##
##............[]..##
##..[][]....[]..[]##
##....[]@.....[]..##
##[]##....[]......##
##[]....[]....[]..##
##..[][]..[]..[][]##
##........[]......##
####################\
"""


def test_15_map_wide_move_simple():
    map_input = """\
#######
#...#.#
#.....#
#..OO@#
#..O..#
#.....#
#######\
"""
    moves = "<vv<<^^<<^^"
    m = Map(map_input, moves)
    m.make_wide()
    assert str(m) == """\
##############
##......##..##
##..........##
##....[][]@.##
##....[]....##
##..........##
##############\
"""

    m.move_tile(m.robot, m.moves[0])
    assert str(m) == """\
##############
##......##..##
##..........##
##...[][]@..##
##....[]....##
##..........##
##############\
"""
    m.move_tile(m.robot, m.moves[1])
    assert str(m) == """\
##############
##......##..##
##..........##
##...[][]...##
##....[].@..##
##..........##
##############\
"""
    m.move_tile(m.robot, m.moves[2])
    assert str(m) == """\
##############
##......##..##
##..........##
##...[][]...##
##....[]....##
##.......@..##
##############\
"""
    m.move_tile(m.robot, m.moves[3])
    assert str(m) == """\
##############
##......##..##
##..........##
##...[][]...##
##....[]....##
##......@...##
##############\
"""
    m.move_tile(m.robot, m.moves[4])
    assert str(m) == """\
##############
##......##..##
##..........##
##...[][]...##
##....[]....##
##.....@....##
##############\
"""
    m.move_tile(m.robot, m.moves[5])
    print(str(m))
    assert str(m) == """\
##############
##......##..##
##...[][]...##
##....[]....##
##.....@....##
##..........##
##############\
"""
    m.move_tile(m.robot, m.moves[6])
    assert str(m) == """\
##############
##......##..##
##...[][]...##
##....[]....##
##.....@....##
##..........##
##############\
"""
    m.move_tile(m.robot, m.moves[7])
    assert str(m) == """\
##############
##......##..##
##...[][]...##
##....[]....##
##....@.....##
##..........##
##############\
"""
    m.move_tile(m.robot, m.moves[8])
    assert str(m) == """\
##############
##......##..##
##...[][]...##
##....[]....##
##...@......##
##..........##
##############\
"""
    m.move_tile(m.robot, m.moves[9])
    assert str(m) == """\
##############
##......##..##
##...[][]...##
##...@[]....##
##..........##
##..........##
##############\
"""
    m.move_tile(m.robot, m.moves[10])
    assert str(m) == """\
##############
##...[].##..##
##...@.[]...##
##....[]....##
##..........##
##..........##
##############\
"""


def test_15_map_wide_move_complex():

    map_input = """\
##########
#..O..O.O#
#......O.#
#.OO..O.O#
#..O@..O.#
#O#..O...#
#O..O..O.#
#.OO.O.OO#
#....O...#
##########\
"""
    moves = """\
<vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^
vvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v
><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<
<<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^
^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><
^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^
>^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^
<><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>
^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>
v^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^\
"""
    m = Map(map_input, moves)
    m.make_wide()
    assert str(m) == """\
####################
##....[]....[]..[]##
##............[]..##
##..[][]....[]..[]##
##....[]@.....[]..##
##[]##....[]......##
##[]....[]....[]..##
##..[][]..[]..[][]##
##........[]......##
####################\
"""
    m.move_robot()
    print(str(m))
    assert str(m) == """\
####################
##[].......[].[][]##
##[]...........[].##
##[]........[][][]##
##[]......[]....[]##
##..##......[]....##
##..[]............##
##..@......[].[][]##
##......[][]..[]..##
####################\
"""
    assert m.sum_of_boxes_gps_coordinates() == 9021


def test_15_map_wide_move_boxes():

    map_input = """\
##########
#....#...#
#.@OOO...#
#...O....#
#........#
#.#......#
#........#
#........#
#........#
##########\
"""
    moves = ">>vv>>^"
    m = Map(map_input, moves)
    m.make_wide()
    assert str(m) == """\
####################
##........##......##
##..@.[][][]......##
##......[]........##
##................##
##..##............##
##................##
##................##
##................##
####################\
"""
    m.move_robot()
    print(str(m))
    assert str(m) == """\
####################
##........##......##
##.....[][][].....##
##......[]........##
##......@.........##
##..##............##
##................##
##................##
##................##
####################\
"""
    m.moves = list(map(Move, "<^^"))
    m.move_robot()
    print(str(m))
    assert str(m) == """\
####################
##.....[].##......##
##.....@.[][].....##
##......[]........##
##................##
##..##............##
##................##
##................##
##................##
####################\
"""
